import os
import logging
import os, ssl
if (not os.environ.get('PYTHONHTTPSVERIFY', '') and
getattr(ssl, '_create_unverified_context', None)):
    ssl._create_default_https_context = ssl._create_unverified_context

from decouple import config

from slack import WebClient
from slack_bolt import App
from slack_bolt.adapter.socket_mode import SocketModeHandler
import slack

logging.basicConfig(level=logging.DEBUG)

SLACK_BOT_TOKEN = config('SLACK_BOT_TOKEN')
SLACK_APP_TOKEN = config('SLACK_APP_TOKEN')
SLACK_SIGNING_SECRET = config('SLACK_SIGNING_SECRET')

ssl_context = ssl.create_default_context()
ssl_context.check_hostname = False
ssl_context.verify_mode = ssl.CERT_NONE

app = WebClient(token=SLACK_BOT_TOKEN, ssl=ssl_context)

logger = logging.getLogger(__name__)

# try:
#     channel_id = "GSXUDMJ2U"
#     response = app.chat_postMessage(channel=channel_id, text="Hello World!")
# except Exception as e:
#     print(f"error {e}")

@app.command("/hello-bolt-python")
def hello(body, ack):
    user_id = body["user_id"]
    ack(f"Hi <@{user_id}>!")


